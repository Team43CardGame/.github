name: "Backlog: Tech Debt"
description: "Address a technical shortcut or an area of the codebase that needs refactoring."
title: "[Tech Debt]: "
labels: ["Backlog: Tech Debt", "Meta: Unknown Priority"]
projects: ["inno-swp-2025/1"]
type: "Backlog"
body:
  - type: textarea
    id: the-debt
    attributes:
      label: "<h2> What is the technical debt? </h2>"
      description: |
        Keep the comment.
        Follow the instructions in the comment.
        Write your text in this input field after the comment.
      value: |
        <!--
        Describe the technical shortcut, design flaw, or outdated component.
        Be specific and include links to the relevant code, files, or services.

        Example:

        The user's notification preferences (e.g., "likes", "comments", "new followers") are currently hardcoded as a JSON string within the mobile client's settings screen.
        See: `/mobile/src/screens/SettingsScreen.tsx:54`
        -->
    validations:
      required: true

  - type: textarea
    id: context
    attributes:
      label: "<h2> Why was this shortcut taken? </h2>"
      description: |
        Keep the comment.
        Follow the instructions in the comment.
        Write your text in this input field after the comment.
      value: |
        <!--
        (Optional) If known, explain the original reason for this implementation.
        This helps with understanding the context and avoiding similar issues in the future.

        Example:

        This was a temporary measure to meet the deadline for the v1.1 release. The backend API to fetch these settings dynamically was not ready at the time.
        -->
    validations:
      required: false

  - type: textarea
    id: impact
    attributes:
      label: "<h2> What is the impact of this debt? </h2>"
      description: |
        Keep the comment.
        Follow the instructions in the comment.
        Write your text in this input field after the comment.
      value: |
        <!--
        Explain how this debt is slowing down development, increasing risk, or causing other problems.
        This is the most important section for prioritization.

        Example:

        Every time we want to add a new notification type (e.g., "mentions"), we have to release a new version of the mobile app.
        This prevents us from rolling out new features on the backend and makes the feature flag system for notifications useless.
        It slows down our development cycle by at least a week for any new notification feature.
        -->
    validations:
      required: true

  - type: textarea
    id: proposed-solution
    attributes:
      label: "<h2> What is the proposed solution? </h2>"
      description: |
        Keep the comment.
        Follow the instructions in the comment.
        Write your text in this input field after the comment.
      placeholder: |
        <!--
        Outline the technical plan to fix the debt.
        Describe the desired end state.

        Example:

        1. Create a new backend endpoint `GET /api/v1/notification-preferences` that returns a list of available preference objects.
        2. Modify the `SettingsScreen.tsx` to fetch this list from the new endpoint on component mount.
        3. Dynamically render the list of preferences on the settings screen instead of using the hardcoded list.
        4. Ensure the client-side state management correctly handles the asynchronously loaded data.
        -->
    validations:
      required: true

  - type: textarea
    id: sub-issues
    attributes:
      label: "<h2> Sub-issues </h2>"
      description: |
        Don't modify the default text in this input field.
      value: |
        Sub-issues are tasks that resolve this technical debt.
    validations:
      required: false
